AWSTemplateFormatVersion: '2010-09-09'
Description: To create VPC with subnetes, internet gateway and Route table
Resources:
  MyVpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: 'true'
      Tags: 
      - Key: "stack"
        Value: "Production"
      - Key: "Name"
        Value: "VPC-01"
  MyEC2Subnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: "ap-south-1b"
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: 'true'
      Tags: 
      - Key: "stack"
        Value: "Production"
      - Key: "Name"
        Value: "Public-01"
      VpcId: !Ref MyVpc
  MyPrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: "ap-south-1b"
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: 'false'
      Tags:
      - Key: "stack"
        Value: "Production"
      - Key: "Name"
        Value: "Private-01"
      VpcId: !Ref MyVpc
  MyPublicRoute:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: MyVpc
      Tags: 
      - Key: "stack"
        Value: "Production"
      - Key: "Name"
        Value: "PublicRoutetable"
  MyPrivateRoute:
    Type: 'AWS::EC2::RouteTable'
    Properties: 
      VpcId: !Ref MyVpc
      Tags:
      - Key: "stack"
        Value: "Production"
      - Key: "Name"
        Value: "PrivateRoutetable"
  MyPublicSubnetRouteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref MyPublicRoute
      SubnetId: !Ref MyEC2Subnet
  MyPrivateSubnetRouteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref MyPrivateRoute
      SubnetId: !Ref MyPrivateSubnet
  MyInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags: 
      - Key: "stack"
        Value: "Production"
      - Key: "Name"
        Value: "IGW-01"
  MyVpcGatewayAttach:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties: 
      InternetGatewayId: !Ref MyInternetGateway
      VpcId: !Ref MyVpc
  MyRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref MyPublicRoute
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: My Security Group
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp  
      VpcId: !Ref MyVpc
  MyEc2Instance: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: ami-0da59f1af71ea4ad2
      InstanceType: t2.micro
      SecurityGroupIds: 
        - !Ref MySecurityGroup
      SubnetId: !Ref MyEC2Subnet
      Tags: 
        - Key: 'Name'
          Value: 'CF-001'